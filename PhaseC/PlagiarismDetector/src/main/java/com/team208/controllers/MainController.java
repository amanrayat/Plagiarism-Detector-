package com.team208.controllers;



import java.util.logging.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.team208.domain.StudentEntity;
import com.team208.domain.StudentRepository;

@CrossOrigin
@Controller
@RequestMapping(path="/team208") 
public class MainController {
	
	/**
	 * Logger
	 */
	private static final Logger logger = 
			Logger.getLogger(MainController.class.getName());

	// This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	@Autowired 
	private StudentRepository userRepository;
	
  @RequestMapping("/")
	  @ResponseBody
	  public String index() {
	    return "Hello World!!!  Team208 Homepage";
	  }
	 
	//@CrossOrigin(origins = "http://localhost:3000")
	 @GetMapping(path="/login")
	 public @ResponseBody StudentEntity login(@RequestParam Long userId, @RequestParam String password )  {
		 StudentEntity n = null;
		 try {

				n = userRepository.findByNEUId(userId);
				
			} catch (Exception e) {
				logger.info("Context : "+e.getMessage());
				
			}
		 
		
			 return n  ;
			
		}
	 //registerUser?studentDBid=1&userId='01226315'&name='rachana'&userRole='student'&password='zzeeddqq'&email='tondare@gmail.com'
	// @CrossOrigin(origins = "http://localhost:3000")
	 @GetMapping(path="/registerUser") // Map ONLY GET Requests
		public @ResponseBody String addNewUser (@RequestParam Long userId, @RequestParam String name, @RequestParam String userRole,
				@RequestParam String password, @RequestParam String email) {
			// @ResponseBody means the returned String is the response, not a view name
			// @RequestParam means it is a parameter from the GET or POST request

		
			StudentEntity n = new StudentEntity();
			n.setStudentId(userId);
			n.setName(name);
			n.setUserRole(userRole);
			n.setPassword(password);
			n.setEmail(email);
			userRepository.save(n);
			return "Saved";
		}
	 

	// @CrossOrigin(origins = "http://localhost:3000")
	 @GetMapping(path="/findStudent")
		public @ResponseBody StudentEntity findStudent(@RequestParam Long userId ) {

			return userRepository.findByNEUId(userId);
			
		}
	
}
